{"version":3,"file":"static/js/374.0d473184.chunk.js","mappings":"kNACA,EAA6B,kCAA7B,EAAyE,+BAAzE,EAAoH,iCAApH,EAAoK,oC,SCQrJ,SAASA,EAAc,GAA6C,IAAD,EAA1CC,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QACxCC,GAAMC,EAAAA,EAAAA,GAAe,eAArBD,EACR,GAIIE,EAAAA,EAAAA,IAAQ,CACVC,cAAe,CACbC,WAAY,MALdC,EAAQ,EAARA,SACAC,EAAY,EAAZA,aACaC,EAAM,EAAnBC,UAAaD,OAYf,OACE,kBAAMT,SAAUQ,GANyC,SAACG,GAC1DX,EAASW,GACTV,GACF,IAG+CW,YAAU,aACrD,SAACC,EAAA,GAAS,gBACRC,UAAWC,EACXC,GAAG,eACHC,SAAO,EACPC,aAAa,MACbC,WAAS,EACTC,OAAO,QACPC,MAAOnB,EAAE,qBACToB,KAAK,OACLC,WAAS,EACTC,QAAQ,WACRC,WAA6B,QAAjB,EAAAhB,EAAOH,kBAAU,OAAjB,EAAmBoB,QAAUxB,EAAE,GAAD,OAAIO,EAAOH,WAAWoB,UAAa,KACzEnB,EAAS,aAAc,CACzBoB,SAAU,gBACVC,UAAW,CACTC,MAAO,EACPH,QAAS,eAEXI,UAAW,CACTD,MAAO,GACPH,QAAS,kBAEX,IACFK,QAAStB,EAAOH,eAElB,iBAAKQ,UAAWC,EAAe,WAC7B,SAACiB,EAAA,EAAM,CACLlB,UAAWC,EACXO,KAAK,SACLE,QAAQ,YACRS,WAAYxB,EAAOH,WAAW,SAE7BJ,EAAE,gBAEL,SAAC8B,EAAA,EAAM,CAAClB,UAAWC,EAAqBS,QAAQ,WAAWU,QAASjC,EAAQ,SACzEC,EAAE,uBAKb,C","sources":["webpack://my-app/./src/components/boardManagementPage/addColumnForm/AddColumnForm.module.scss?df26","components/boardManagementPage/addColumnForm/AddColumnForm.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"titleInput\":\"AddColumnForm_titleInput__WTC2L\",\"buttons\":\"AddColumnForm_buttons__HaBzq\",\"addButton\":\"AddColumnForm_addButton__jdc8q\",\"cancelButton\":\"AddColumnForm_cancelButton__XmFD6\"};","import React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { TAddColumnFormProps, TAddColumnFormValues } from './AddColumn.types';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\n\nimport styles from './AddColumnForm.module.scss';\n\nexport default function AddColumnForm({ onSubmit, onClose }: TAddColumnFormProps) {\n  const { t } = useTranslation('modal-forms');\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      columnName: '',\n    },\n  });\n\n  const handlerSubmit: SubmitHandler<TAddColumnFormValues> = (data) => {\n    onSubmit(data);\n    onClose();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(handlerSubmit)} noValidate>\n      <TextField\n        className={styles.titleInput}\n        id=\"column-title\"\n        focused\n        autoComplete=\"off\"\n        autoFocus\n        margin=\"dense\"\n        label={t('createColumnLabel')}\n        type=\"text\"\n        fullWidth\n        variant=\"outlined\"\n        helperText={errors.columnName?.message ? t(`${errors.columnName.message}`) : ' '}\n        {...register('columnName', {\n          required: 'fieldRequired' || '',\n          minLength: {\n            value: 2,\n            message: 'fieldLength' || '',\n          },\n          maxLength: {\n            value: 50,\n            message: 'fieldLength' || '',\n          },\n        })}\n        error={!!errors.columnName}\n      />\n      <div className={styles.buttons}>\n        <Button\n          className={styles.addButton}\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={!!errors.columnName}\n        >\n          {t('addButton')}\n        </Button>\n        <Button className={styles.cancelButton} variant=\"outlined\" onClick={onClose}>\n          {t('cancelButton')}\n        </Button>\n      </div>\n    </form>\n  );\n}\n"],"names":["AddColumnForm","onSubmit","onClose","t","useTranslation","useForm","defaultValues","columnName","register","handleSubmit","errors","formState","data","noValidate","TextField","className","styles","id","focused","autoComplete","autoFocus","margin","label","type","fullWidth","variant","helperText","message","required","minLength","value","maxLength","error","Button","disabled","onClick"],"sourceRoot":""}